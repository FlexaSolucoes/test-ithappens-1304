unit controller.usuarios;

interface

uses
     System.SysUtils                     ,
     System.Classes                      ,
     System.Json                         ,
     System.Generics.Collections         ,
     DataSnap.DSProviderDataModuleAdapter,
     Datasnap.DSServer                   ,
     Datasnap.DSAuth                     ,
     REST.JSON                           ,
     Model.Conexao.Firedac               ,
     Model.Patterns.Servico              ,
     Model.Patterns.functions            ,
     model.entity.usuarios               ;

type
  TControlerUsuario = class(TDataModule)
  private
    { Private declarations }
  public
    { Public declarations }
    function Usuario(id:Integer=0):TJSONValue;
    function updateUsuario(Usuario:TJSONObject):TJSONValue;
    function acceptUsuario(Usuario:TJSONObject):TJSONValue;
    function cancelUsuario(id:Integer):TJSONValue;
  end;

var
  ControlerUsuario: TControlerUsuario;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

function TControlerUsuario.acceptUsuario(Usuario: TJSONObject): TJSONValue;
var sSQL:String;
var u:model.entity.usuarios.Tusuarios;
begin
     u:=TJSon.JsonToObject<model.entity.usuarios.TUsuarios>(Usuario);
     sSQL:= 'insert into usuarios ( ';
     sSQL:= sSQL+ ' usuario_descricao , ';
     sSQL:= sSQL+ ' usuario_cpf       , ';
     sSQL:= sSQL+ ' usuario_email     , ';
     sSQL:= sSQL+ ' usuario_senha     ) ';
     sSQL:= sSQL+ ' VALUES ('             ;
     sSQL:= sSQL+ '''' + u.usuario_descricao + ''' , ';
     sSQL:= sSQL+ '''' + u.usuario_cpf       + ''' , ';
     sSQL:= sSQL+ '''' + u.usuario_email     + ''' , ';
     sSQL:= sSQL+ '''' + u.usuario_senha     + ''' ) ';

     if TModelConexaoFiredac.GetInstance.ExecuteCommand(sSQL) then
     begin
          Result:=TJSONString.Create('Registro inserido com sucesso!');
     end
     else
     begin
          Result:=TJSONString.Create('Falha na inserção do registro!');
     end;

end;

function TControlerUsuario.cancelUsuario(id: Integer): TJSONValue;
begin
     Result:=TJSONString.Create('Não é possivel apagar o registro!');
end;

function TControlerUsuario.updateUsuario(Usuario: TJSONObject): TJSONValue;
var sSQL:String;
var u:model.entity.usuarios.Tusuarios;
begin
     u:=TJSon.JsonToObject<model.entity.usuarios.TUsuarios>(Usuario);
     sSQL:= 'update usuarios set ';
     sSQL:= sSQL+ ' usuario_descricao = '+ '''' + u.usuario_descricao + ''' , ';
     sSQL:= sSQL+ ' usuario_cpf       = '+ '''' + u.usuario_cpf       + ''' , ';
     sSQL:= sSQL+ ' usuario_email     = '+ '''' + u.usuario_email     + ''' , ';
     sSQL:= sSQL+ ' usuario_senha     = '+ '''' + u.usuario_senha     + '''   ';
     sSQL:= sSQL+ ' where usuario_id = '+         u.usuario_id.ToString        ;

     if TModelConexaoFiredac.GetInstance.ExecuteCommand(sSQL) then
     begin
          Result:=TJSONString.Create('Registro alterado com sucesso!');
     end
     else
     begin
          Result:=TJSONString.Create('Falha na alteção do registro!');
     end;
end;

function TControlerUsuario.Usuario(id: Integer): TJSONValue;
var sSQL:String;
begin
     sSQL:=      'Select * from usuarios ';
     if IsNotEmpty(id) then
     begin
          sSQL  := sSQL+'where usuario_id = '+ id.ToString;
     end;
     sSQL  := sSQL+'order by usuario_id';

     Result:= TModelPatternsServico.GetInstance.DataSetToJsonArray(TModelConexaoFiredac.GetInstance.ExecuteSelect(sSQL));

end;

end.
