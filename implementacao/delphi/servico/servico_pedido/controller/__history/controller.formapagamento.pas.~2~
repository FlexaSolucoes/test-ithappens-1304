unit controller.formapagamento;

interface

uses
     System.SysUtils                     ,
     System.Classes                      ,
     System.Json                         ,
     System.Generics.Collections         ,
     DataSnap.DSProviderDataModuleAdapter,
     Datasnap.DSServer                   ,
     Datasnap.DSAuth                     ,
     REST.JSON                           ,
     Model.Conexao.Firedac               ,
     Model.Patterns.Servico              ,
     Model.Patterns.functions            ,
     model.entity.formapagamento               ;

type
  TControlerFormaPagamento = class(TDataModule)
  private
    { Private declarations }
  public
    { Public declarations }
    function FormaPagamento(id:Integer=0):TJSONValue;
    function updateFormaPagamento(FormaPagamento:TJSONObject):TJSONValue;
    function acceptFormaPagamento(FormaPagamento:TJSONObject):TJSONValue;
    function cancelFormaPagamento(id:Integer):TJSONValue;
  end;

var
  ControlerFormaPagamento: TControlerFormaPagamento;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TControlerFormaPagamento }

function TControlerFormaPagamento.acceptFormaPagamento(
  FormaPagamento: TJSONObject): TJSONValue;
var sSQL:String;
var f:model.entity.formapagamento.Tformapagamento;
begin
     f:=TJSon.JsonToObject<model.entity.formapagamento.Tformapagamento>(formapagamento);
     sSQL:= 'insert into formapagamento (       ';
     sSQL:= sSQL+ ' formapagamento_descricao   , ';
     sSQL:= sSQL+ ' VALUES ('             ;
     sSQL:= sSQL+ ' ''' + f.formapagamento_descricao   + ''' ) ';

     if TModelConexaoFiredac.GetInstance.ExecuteCommand(sSQL) then
     begin
          Result:=TJSONString.Create('Registro inserido com sucesso!');
     end
     else
     begin
          Result:=TJSONString.Create('Falha na inserção do registro!');
     end;
end;

function TControlerFormaPagamento.cancelFormaPagamento(id: Integer): TJSONValue;
begin
     Result:=TJSONString.Create('Não é possivel apagar o registro!');
end;

function TControlerFormaPagamento.FormaPagamento(id: Integer): TJSONValue;
var sSQL:String;
begin
     sSQL:=      'Select * from formapagamento ';
     if IsNotEmpty(id) then
     begin
          sSQL  := sSQL+'where formapagamento_id = '+id.ToString;
     end;
     sSQL  := sSQL+'order by formapagamento_descricao';

     Result:= TModelPatternsServico.GetInstance.DataSetToJsonArray(TModelConexaoFiredac.GetInstance.ExecuteSelect(sSQL));
end;

function TControlerFormaPagamento.updateFormaPagamento(
  FormaPagamento: TJSONObject): TJSONValue;
var sSQL:String;
var f:model.entity.formapagamento.Tformapagamento;
begin
     f:=TJSon.JsonToObject<model.entity.formapagamento.Tformapagamento>(formapagamento);
     sSQL:= 'update formapagamento set ';
     sSQL:= sSQL+ ' formapagamento_descricao   = '+ '''' + f.formapagamento_descricao   + '''  ';
     sSQL:= sSQL+ ' where formapagamento_id = '+ f.formapagamento_id.ToString;

     if TModelConexaoFiredac.GetInstance.ExecuteCommand(sSQL) then
     begin
          Result:=TJSONString.Create('Registro alterado com sucesso!');
     end
     else
     begin
          Result:=TJSONString.Create('Falha na alteção do registro!');
     end;
end;

end.
