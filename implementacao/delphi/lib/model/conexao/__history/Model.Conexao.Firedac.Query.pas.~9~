unit Model.Conexao.Firedac.Query;

interface

uses System.StrUtils         ,
     Model.Conexao.Interfaces,
     Data.DB                 ,
     FireDAC.Stan.Intf       ,
     FireDAC.Stan.Option     ,
     FireDAC.Stan.Error      ,
     FireDAC.UI.Intf         ,
     FireDAC.Phys.Intf       ,
     FireDAC.Stan.Def        ,
     FireDAC.Stan.Pool       ,
     FireDAC.Stan.Async      ,
     FireDAC.Phys            ,
     FireDAC.VCLUI.Wait      ,
     FireDAC.Stan.ExprFuncs  ,
     FireDAC.Phys.SQLiteDef  ,
     FireDAC.Phys.SQLite     ,
     FireDAC.Comp.UI         ,
     FireDAC.Comp.Client     ,
     FireDAC.Stan.Param      ,
     FireDAC.DatS            ,
     FireDAC.DApt.Intf       ,
     FireDAC.DApt            ,
     FireDAC.Comp.DataSet    ;


type
    TModelConexaoFiredacQuery = class(TInterfacedObject, IModelQuery)
    private
       FQuery:TFDMemTable;
    public
       constructor Create;
       destructor Destroy;override;
       class function New:IModelQuery;
    public
       function Query : TDataSet;
    end;

implementation

uses
    System.sysUtils;

var sDBName:String;

{ TModelConexaoSQLServer }

constructor TModelConexaoFiredacQuery.Create;
begin
     FQuery:=TFDMemTable.Create(nil);
end;

destructor TModelConexaoFiredacQuery.Destroy;
begin
     FreeAndNil(FQuery);
  inherited;
end;

class function TModelConexaoFiredacQuery.New: IModelQuery;
begin
     Result := Self.Create;
end;

function TModelConexaoFiredacQuery.Query: TDataSet;
begin
     Result:=FQuery.Create(nil);
end;

end.
